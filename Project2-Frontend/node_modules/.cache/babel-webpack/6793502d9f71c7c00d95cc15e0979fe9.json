{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/atkus/Documents/Revature/p2-recipebook/Project2-Frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FavoriteService {\n  constructor(http) {\n    this.http = http; //adding a favorite cocktail\n\n    this.addFavUrl = \"http://localhost:8090/addfavorite\"; //viewing user favorite cocktails\n\n    this.viewFavsUrl = \"http://localhost:8090/viewfavorites\";\n  }\n\n  addFavorite(user_id, drink) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var fav = {\n        user_id: user_id,\n        drink: drink\n      };\n      let response = yield fetch(_this.addFavUrl, {\n        method: \"POST\",\n        mode: 'cors',\n        body: JSON.stringify(fav),\n        credentials: \"include\"\n      });\n\n      if (response.status === 201) {\n        console.log(\"Favorite drink added.\");\n      }\n    })();\n  }\n\n  viewFavorites(user_id) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      console.log(\"Inside viewFavorites async\");\n      let favsArray;\n      var id = {\n        user_id: user_id\n      };\n      let response = yield fetch(_this2.viewFavsUrl, {\n        method: \"POST\",\n        mode: 'cors',\n        body: JSON.stringify(id),\n        credentials: \"include\"\n      });\n\n      if (response.status === 200) {\n        favsArray = response.body;\n        console.log(\"Favorites viewed\");\n      }\n\n      console.log(favsArray);\n      return favsArray;\n    })();\n  }\n\n  getFavs(id) {\n    return this.http.post(this.viewFavsUrl, id);\n  }\n\n}\n\nFavoriteService.ɵfac = function FavoriteService_Factory(t) {\n  return new (t || FavoriteService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nFavoriteService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FavoriteService,\n  factory: FavoriteService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/atkus/Documents/Revature/p2-recipebook/Project2-Frontend/src/app/services/favorite.service.ts"],"names":["i0","i1","FavoriteService","constructor","http","addFavUrl","viewFavsUrl","addFavorite","user_id","drink","fav","response","fetch","method","mode","body","JSON","stringify","credentials","status","console","log","viewFavorites","favsArray","id","getFavs","post","ɵfac","FavoriteService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory","providedIn"],"mappings":";AAAA,OAAO,KAAKA,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,eAAN,CAAsB;AACzBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ,CADc,CAEd;;AACA,SAAKC,SAAL,GAAiB,mCAAjB,CAHc,CAId;;AACA,SAAKC,WAAL,GAAmB,qCAAnB;AACH;;AACKC,EAAAA,WAAW,CAACC,OAAD,EAAUC,KAAV,EAAiB;AAAA;;AAAA;AAC9B,UAAIC,GAAG,GAAG;AACNF,QAAAA,OAAO,EAAEA,OADH;AAENC,QAAAA,KAAK,EAAEA;AAFD,OAAV;AAIA,UAAIE,QAAQ,SAASC,KAAK,CAAC,KAAI,CAACP,SAAN,EAAiB;AACvCQ,QAAAA,MAAM,EAAE,MAD+B;AAEvCC,QAAAA,IAAI,EAAE,MAFiC;AAGvCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,GAAf,CAHiC;AAIvCQ,QAAAA,WAAW,EAAE;AAJ0B,OAAjB,CAA1B;;AAMA,UAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACH;AAb6B;AAcjC;;AACKC,EAAAA,aAAa,CAACd,OAAD,EAAU;AAAA;;AAAA;AACzBY,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,UAAIE,SAAJ;AACA,UAAIC,EAAE,GAAG;AACLhB,QAAAA,OAAO,EAAEA;AADJ,OAAT;AAGA,UAAIG,QAAQ,SAASC,KAAK,CAAC,MAAI,CAACN,WAAN,EAAmB;AACzCO,QAAAA,MAAM,EAAE,MADiC;AAEzCC,QAAAA,IAAI,EAAE,MAFmC;AAGzCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeO,EAAf,CAHmC;AAIzCN,QAAAA,WAAW,EAAE;AAJ4B,OAAnB,CAA1B;;AAMA,UAAIP,QAAQ,CAACQ,MAAT,KAAoB,GAAxB,EAA6B;AACzBI,QAAAA,SAAS,GAAGZ,QAAQ,CAACI,IAArB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH;;AACDD,MAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA,aAAOA,SAAP;AAjByB;AAkB5B;;AACDE,EAAAA,OAAO,CAACD,EAAD,EAAK;AACR,WAAO,KAAKpB,IAAL,CAAUsB,IAAV,CAAe,KAAKpB,WAApB,EAAiCkB,EAAjC,CAAP;AACH;;AA5CwB;;AA8C7BtB,eAAe,CAACyB,IAAhB,GAAuB,SAASC,uBAAT,CAAiCC,CAAjC,EAAoC;AAAE,SAAO,KAAKA,CAAC,IAAI3B,eAAV,EAA2BF,EAAE,CAAC8B,QAAH,CAAY7B,EAAE,CAAC8B,UAAf,CAA3B,CAAP;AAAgE,CAA7H;;AACA7B,eAAe,CAAC8B,KAAhB,GAAwB,aAAchC,EAAE,CAACiC,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEhC,eAAT;AAA0BiC,EAAAA,OAAO,EAAEjC,eAAe,CAACyB,IAAnD;AAAyDS,EAAAA,UAAU,EAAE;AAArE,CAAtB,CAAtC","sourcesContent":["import * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class FavoriteService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        //adding a favorite cocktail\r\n        this.addFavUrl = \"http://localhost:8090/addfavorite\";\r\n        //viewing user favorite cocktails\r\n        this.viewFavsUrl = \"http://localhost:8090/viewfavorites\";\r\n    }\r\n    async addFavorite(user_id, drink) {\r\n        var fav = {\r\n            user_id: user_id,\r\n            drink: drink\r\n        };\r\n        let response = await fetch(this.addFavUrl, {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            body: JSON.stringify(fav),\r\n            credentials: \"include\"\r\n        });\r\n        if (response.status === 201) {\r\n            console.log(\"Favorite drink added.\");\r\n        }\r\n    }\r\n    async viewFavorites(user_id) {\r\n        console.log(\"Inside viewFavorites async\");\r\n        let favsArray;\r\n        var id = {\r\n            user_id: user_id\r\n        };\r\n        let response = await fetch(this.viewFavsUrl, {\r\n            method: \"POST\",\r\n            mode: 'cors',\r\n            body: JSON.stringify(id),\r\n            credentials: \"include\"\r\n        });\r\n        if (response.status === 200) {\r\n            favsArray = response.body;\r\n            console.log(\"Favorites viewed\");\r\n        }\r\n        console.log(favsArray);\r\n        return favsArray;\r\n    }\r\n    getFavs(id) {\r\n        return this.http.post(this.viewFavsUrl, id);\r\n    }\r\n}\r\nFavoriteService.ɵfac = function FavoriteService_Factory(t) { return new (t || FavoriteService)(i0.ɵɵinject(i1.HttpClient)); };\r\nFavoriteService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: FavoriteService, factory: FavoriteService.ɵfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}